/*
 * Buttons
 */

// Core
button,
[role=button],
.btn {
  display: inline-block;
  @include ie7-inline-block();
  padding: 0 16px;
  color: #444;
  font-size: $btnFontSize;
  font-family: $baseFontFamily;
  font-weight: $btnFontWeight;
  line-height: $btnLineHeight;
  text-align: center;
  vertical-align: baseline;
  white-space: nowrap;
  word-wrap: normal;
  cursor: pointer;
  border: 1px solid $btnBorder;
  min-width: 54px;
  @include gradient-vertical($btnBackground, $btnBackgroundHighlight);
  @include border-radius($btnBorderRadius);
  @include ie7-restore-left-whitespace();
  @include box-shadow(none);
  @include transition(all 0.218s ease 0s);
  * {
    @include opacity(70);
  }

  /* states */
  &:hover {
    color: #222;
    border-color: #c6c6c6;
    text-decoration: none;
    @include box-shadow(0 1px 1px rgba(0,0,0,0.1));
    @include transition(all 0s ease 0s);
    * {
      @include opacity(90);
    }
  }

  &.focus,
  &:focus {
    outline: none;
    border-color: $btnBorderFocusedColor;
  }

  .open &,
  &.active,
  &:active {
    @include gradient-vertical(#eee, #e0e0e0);
    @include box-shadow(inset 0 1px 2px rgba(0,0,0,0.1));
    border-color: $btnBorder;
  }

  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:focus:hover,
    &:active,
    &:active:hover {
      cursor: default;
      @include gradient-vertical($btnBackground, $btnBackgroundHighlight);
      @include box-shadow(none);
      border-color: $btnBorder;
      color: #b8b8b8;
      * {
        @include opacity(65);
      }
    }
  }

  &.btn-thin {
    min-width: 34px;
    padding: 0px;
  }

  & [class^="icon-"] + .caret {
    margin-left: 7px;
  }

  .inline-control {
    margin-right: 10px;
  }
}


.btn-old {
  @include ie7-inline-block();
  padding: 4px 12px;
  margin-bottom: 0;
  font-size: $btnFontSize;
  font-family: $baseFontFamily;
  font-weight: $btnFontWeight;
  line-height: $btnLineHeight;
  text-align: center;
  vertical-align: baseline;
  white-space: nowrap;
  word-wrap: normal;
  cursor: pointer;
  @include buttonBackground($btnBackground, $btnBackgroundHighlight, $gray, none);
  border: 1px solid $btnBorder;
  border-bottom-color: darken($btnBorder, 10%);
  @include border-radius($btnBorderRadius);
  @include ie7-restore-left-whitespace();
  @include box-shadow(inset 0 0 1px 0 $white);
  @include transition(all 0.218s ease 0s);

  /* states */
  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:focus:hover,
    &:active,
    &:active:hover {
      cursor: default;
      background-image: none;
      @include opacity(65);
      @include box-shadow(none);
      border-color: $btnBorder;
      color: $gray;
    }
  }

  &:hover {
    color: $grayDark;
    text-decoration: none;
    @include transition(all 0s ease 0s);
    @include box-shadow(0 1px 2px rgba(0,0,0,0.25), inset 0 0 3px $white);
    border-color: $grayLight;
    .caret {
      @include opacity(100);
    }
  }

  &.focus,
  &:focus {
    outline: none;
    border-color: $btnBorderFocusedColor;
    @include box-shadow(0 0 1px rgba(red($blue), green($blue), blue($blue), 0.5));
  }

  &.active,
  &.active:hover,
  &:active,
  &:active:hover,
  .btn-group.open &.dropdown-toggle {
    @include gradient-vertical(#e6e6e6, #dcdcdc);
    border-color: #999 #aaa #ccc;
    @include box-shadow(inset 0 1px 1px 0 #aaa);
  }

  /* reposition the caret */
  .caret {
    margin-top: 7px;
    margin-left: 0;
  }

  &::-moz-focus-inner { border: 0; }
}

/* Button sizes */
.btn-large {
  padding: 9px 14px;
  font-size: $btnFontSize + 2px;
  line-height: $btnLineHeight + 2px;
  @include border-radius($btnBorderRadius + 2px);

  & [class^="icon-"] {
    margin-top: 1px;
  }

  .caret {
    margin-top: 6px;
    border-left-width: 5px;
    border-right-width: 5px;
    border-top-width: 5px;
  }
}

.btn-small {
  padding: 5px 9px;
  font-size: $btnFontSize - 2px;
  line-height: $btnLineHeight - 2px;

  & [class^="icon-"] {
    margin-top: -1px;
  }

  .caret { margin-top: 6px; }
}

.btn-mini {
  padding: 2px 6px;
  font-size: $btnFontSize - 2px;
  line-height: $btnLineHeight - 4px;
  .caret { margin-top: 5px; }
}


/* border for alternative buttons */
@mixin button-border($color) {
  &, &:focus {
    border-color: $color $color darken($color,15%);
    border-color: rgba(0,0,0,0.1) rgba(0,0,0,0.1) fadein(rgba(0,0,0,0.1),15%);
  }
}

/* Alternate buttons */
@mixin build-button($name, $bgcolor, $hightcolor) {
  .btn-#{$name} {
    color: $white;
    text-shadow: 0 -1px 0 rgba(0,0,0,0.25);
    @include buttonBackground($bgcolor, $hightcolor);
    @include button-border($hightcolor);
    @include box-shadow(none);

    &:hover,
    &:focus:hover {
      color: $white;
      @include box-shadow(0 1px 2px rgba(0,0,0,0.25), inset 0 0 1px $white);
      border-color: darken($hightcolor, 10);
    }
    &:focus {
      outline: none;
      @include box-shadow(inset 0 0 0 1px $white);
    }

    &.active,
    &.active:hover,
    &:active,
    &:active:hover,
    .btn-group.open &.dropdown-toggle {
      @include box-shadow(inset 0 1px 1px 0 rgba(0,0,0,0.5));
      background-image: none;
      background-color: $bgcolor;
      border-color: darken($hightcolor, 10);
    }

    /* sates */
    &.disabled,
    &[disabled] {
      &,
      &:hover,
      &:focus,
      &:focus:hover,
      &:active,
      &:active:hover {
        cursor: default;
        background-image: none;
        @include opacity(65);
        @include box-shadow(none);
        border-color: darken($hightcolor, 10);
        background-color: $bgcolor;
        color: $white;
      }
    }

    .caret {
      border-top-color: $white;
      border-bottom-color: $white;
      @include opacity(75);
    }
  }
}

@include build-button(primary, $btnPrimaryBackground, $btnPrimaryBackgroundHighlight);
@include build-button(danger, $btnDangerBackground, $btnDangerBackgroundHighlight);
@include build-button(warning, $btnWarningBackground, $btnWarningBackgroundHighlight);
@include build-button(success, $btnSuccessBackground, $btnSuccessBackgroundHighlight);
@include build-button(info, $btnInfoBackground, $btnInfoBackgroundHighlight);
@include build-button(inverse, $btnInverseBackground, $btnInverseBackgroundHighlight);
